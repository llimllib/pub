#!/usr/bin/env python
# -*- coding: utf-8 -*-

import argparse
from os import getcwdu
from imp import load_source
from sys import exit
from os.path import abspath, join

from path import path

def main(options):
    root = path(getcwdu())
    try:
        pubfile = open(root / "pubfile")
    except IOError:
        print "unable to find pubfile"
        raise

    tasks = []

    try:
        pf = load_source("pubfile", "pubfile")
    except:
        print "Error in pubfile."
        raise

    #tasks are only those functions which have a __pub_task__ attribute
    tasks = dict((d, getattr(pf, d))
                 for d in dir(pf)
                 if getattr(getattr(pf, d), "__pub_task__", False))

    if options.list_tasks:
        for name, task in tasks.iteritems():
            print "%s: %s" % (name, task.__doc__)
        exit()

    if not options.tasks:
        print "no tasks specified. exiting"
        exit()

    unknown_tasks = [t for t in options.tasks if t not in tasks.keys()]
    if any(unknown_tasks):
        print "sorry, don't know how to perform tasks %s" % unknown_tasks
        exit()

    for task in options.tasks:
        tasks[task]()

if __name__ == "__main__":
    import argparse

    parser = argparse.ArgumentParser(description='Python Utility Belt v0.1')
    parser.add_argument('-l', dest='list_tasks', action="store_true",
                        help='list available tasks')
    parser.add_argument('tasks', metavar='task', type=str, nargs='*',
                        help='the tasks to run')

    args = parser.parse_args()

    main(args)
